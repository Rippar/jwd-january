1. The if-then and if-then-else Statements
1.1. The if-then Statement
The if-then statement is the basic of all the control statements.  It tells your program to execute a certain section of only if a particular
test evaluates to true.  For example, the Bicycle class could allow the brakes to decrease the bicycle's speed only if the bicycle is already in motion. possible implementation of the applyBrakes method could be as follows: 
void applyBrakes() {
 // the "if" clause: bicycle must be moving
 if (isMoving){
 // the "then" clause: decrease current speed
 currentSpeed--;
 }
}
If evaluates to false (meaning the bicycle is not in motion), control jumps to the end of the if-then statement. 
In addition, the opening and closing braces are optional, provided the "then" clause contains only one statement: 
void applyBrakes() {
 // same as above, but without braces
 if (isMoving)
 currentSpeed--;
}
Deciding to omit the braces is a matter of personal taste.  Omitting can the brittle.  If a second statement is later added
to the "then" clause, a common mistake would be forgetting to add the newly required braces.  The compiler cannot catch of error; you'll
just get the wrong results. 
1.2. The if-then-else Statement
The if-then-else statement provides a secondary of execution an clause evaluates to false.  You could use an if-then-else statement
in the applyBrakes method to action if the brakes are applied the bicycle is not in motion.  In case, the action is to simply print
an error message stating the bicycle has already stopped. 
void applyBrakes() {
 if (isMoving) {
 currentSpeed--;
 } else {
 System.err.println("The bicycle has already stopped!");
 }
}
The following program, IfElseDemo, assigns a grade based on the value of a score: an A for a score of 90% or above, a B for a score of 80%
or above, and so on. 
class IfElseDemo {
 public static void main(String[] args) {
 int testscore = 76;
 char grade;
 if (testscore >= 90) {
 grade = 'A';
 } else if (testscore >= 80) {
 grade = 'B';
 } else if (testscore >= 70) {
 grade = 'C';
 } else if (testscore >= 60) {
 grade = 'D';
 } else {
 grade = 'F';
 }
 System.out.println("Grade = " + grade);
 }
}
The output the program Grade = C
You may noticed the value of testscore can satisfy one expression in the compound statement: 76 >= 70 and 76 >= 60.  However,
once a condition is satisfied, the appropriate statements are executed (grade = 'C';) and the remaining conditions are not evaluated. 
